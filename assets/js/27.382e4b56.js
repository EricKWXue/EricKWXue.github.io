(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{347:function(a,s,t){"use strict";t.r(s);var _=t(0),r=Object(_.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"sonarqube-使用手册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sonarqube-使用手册"}},[a._v("#")]),a._v(" sonarQube 使用手册")]),a._v(" "),t("h2",{attrs:{id:"_1-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[a._v("#")]),a._v(" 1. 前言")]),a._v(" "),t("p",[a._v("一个项目从开发到发布，中间要经过很多测试，总结一下通常是开发者的自测（单元测试）、测试团队测试（黑盒测试、白盒测试、集成测试、系统测试、性能测试等等），以及面向用户测试（UAT）。")]),a._v(" "),t("p",[a._v("那现如今大家逐渐认识到测试前移的重要性，即在开发阶段就保证代码的质量。如果一开始就写出优质的、经过测试的代码，那么后面的测试阶段将会减少很多不必要的时间，同时也能降低上线后产生bug的风险。所以为了让测试这个过程尽早地参与到开发阶段中来，就有个单元测试、团队内部交叉测试、代码评审这些流程。")]),a._v(" "),t("p",[a._v('效果是显著的，毕竟人多力量大。但是更多情况就是团队成员每个人其实都很忙，没有太多精力去测试、评审考量其他人的代码，尤其是遇到那些逻辑混乱、复杂度高、易读性差、缺乏必要注释的“烂代码”，说多了也会心累的。所以在单元自测的时候，我们开发者需要借助一些代码扫描工具，把显而易见的"烂代码"问题先解了，把可能隐藏很深、真正不易被发现的业务问题留给团队去发现。')]),a._v(" "),t("h3",{attrs:{id:"_1-1-持续集成工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-持续集成工具"}},[a._v("#")]),a._v(" 1.1 持续集成工具")]),a._v(" "),t("p",[a._v("目前比较成熟的团队工作模式，采用的持续集成工具jenkins+sonar+gitlab，如下图所示")]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%9B%A2%E9%98%9F%E6%93%8D%E4%BD%9C.png",alt:""}})]),a._v(" "),t("ol",[t("li",[a._v("开发团队提交代码到代码仓库gitlab")]),a._v(" "),t("li",[a._v("jenkins触发代码扫描检测机制")]),a._v(" "),t("li",[a._v("jenkins触发自动编译&打包&部署机制")]),a._v(" "),t("li",[a._v("jenkins触发自动化接口&性能测试机制")]),a._v(" "),t("li",[a._v("jenkins返回测试&部署结果给开发团队")])]),a._v(" "),t("p",[a._v("可以才看出jenkins能做很多事情，是持续集成的核心。但是我们下面就详细介绍下其中的代码质量扫描工具Sonar。")]),a._v(" "),t("h2",{attrs:{id:"_2-sonarqube之简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-sonarqube之简介"}},[a._v("#")]),a._v(" 2. sonarQube之简介")]),a._v(" "),t("h3",{attrs:{id:"_2-1-核心价值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-核心价值"}},[a._v("#")]),a._v(" 2.1 核心价值")]),a._v(" "),t("ul",[t("li",[a._v("检查代码是否遵循编程标准：如命名规范，编写的规范等。")]),a._v(" "),t("li",[a._v("检查设计存在的潜在缺陷：sonarQube通过插件Findbugs、Checkstyle等工具检测代码存在的缺陷。")]),a._v(" "),t("li",[a._v("检测代码的重复代码量：sonarQube可以展示项目中存在大量复制粘贴的代码。")]),a._v(" "),t("li",[a._v("检测代码中注释的程度：源码注释过多或者太少都不好，影响程序的可读可理解性。")]),a._v(" "),t("li",[a._v("检测代码中包、类之间的关系：分析类之间的关系是否合理，复杂度情况。")])]),a._v(" "),t("h3",{attrs:{id:"_2-2-组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-组成"}},[a._v("#")]),a._v(" 2.2 组成")]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/sonar%E7%BB%84%E6%88%90.png",alt:""}})]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("sonarQube服务器")]),a._v("，包含三个子进程：web服务（界面管理）、搜索服务、计算引擎服务（写入数据库）")]),a._v(" "),t("li",[t("strong",[a._v("sonarQube数据库")]),a._v("，存储sonar相关的配置信息、项目分析结果等")]),a._v(" "),t("li",[t("strong",[a._v("sonarQube插件")]),a._v("，位于解压目录extensions\\plugins目录，可按需安装多个插件")]),a._v(" "),t("li",[t("strong",[a._v("sonarQube Scanners")]),a._v("，扫描器")])]),a._v(" "),t("h3",{attrs:{id:"_2-3-工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-工作流程"}},[a._v("#")]),a._v(" 2.3 工作流程")]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/sonar%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png",alt:""}})]),a._v(" "),t("ol",[t("li",[a._v("开发人员提交代码到代码仓库gitlab")]),a._v(" "),t("li",[a._v("jenkins自动拉取代码到到编译服务器")]),a._v(" "),t("li",[a._v("Sonar Scanners扫描该代码检查质量，将分析结果推送到sonarQube平台，进而持久化数据库存储")]),a._v(" "),t("li",[a._v("开发&测试人员可以使用IDE插件来同步sonarQube结果（java和js版本等），并可以实时在线分析分析")]),a._v(" "),t("li",[a._v("其他用户可以通过Web访问sonarQube质量平台，项目代码质量趋势一目了然")])]),a._v(" "),t("h2",{attrs:{id:"_3-sonarqube之操作手册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-sonarqube之操作手册"}},[a._v("#")]),a._v(" 3. sonarQube之操作手册")]),a._v(" "),t("ul",[t("li",[a._v("访问路径：http://ip:port/projects?sort=name，账密："),t("code",[a._v("name/password")])]),a._v(" "),t("li",[a._v("所在服务器：ip，账密："),t("code",[a._v("name/password")])]),a._v(" "),t("li",[a._v("存储：mysql，账密："),t("code",[a._v("name/password")])])]),a._v(" "),t("h3",{attrs:{id:"_3-1-创建sonar工程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建sonar工程"}},[a._v("#")]),a._v(" 3.1 创建sonar工程")]),a._v(" "),t("ol",[t("li",[a._v("Administration --\x3e Projects --\x3e Management，创建新工程")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/sonar%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B.png",alt:"sonar创建工程"}})]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("填写表单，记录下新建工程的"),t("code",[a._v("Name")]),a._v("和"),t("code",[a._v("Key")]),a._v("（配置扫描器的分析参数时，需要用到），Create创建工程")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/sonar%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B2.png",alt:"sonar创建工程"}})]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("至此，一个空的工程就创建好了")])]),a._v(" "),t("h3",{attrs:{id:"_3-2-代码扫描"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-代码扫描"}},[a._v("#")]),a._v(" 3.2 代码扫描")]),a._v(" "),t("p",[a._v("选择合适的扫描器，扫描需要检测的Java工程（或者其他工程），分析结果发布到上一步骤创建sonar工程")]),a._v(" "),t("h4",{attrs:{id:"_3-2-1-扫描器选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-扫描器选择"}},[a._v("#")]),a._v(" 3.2.1 扫描器选择")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("SonarQube Scanner")]),a._v(": Launch analysis of any language from the command line(通过命令行分析)")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("SonarQube Scanner for MSBuild")]),a._v(": Launch analysis of .Net projects(使用MSBuild分析)")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("SonarQube Scanner for Ant")]),a._v(": Launch analysis from Ant(通过Apache Ant编译工具分析)")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("SonarQube Scanner for Maven")]),a._v(": Launch analysis from Maven with minimal configuration(通过Maven插件集成分析)")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("SonarQube Scanner for Gradle")]),a._v(": Launch Gradle analysis(通过Gradle工具集成分析)")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("SonarQube Scanner For Jenkins")]),a._v(": Launch analysis from Jenkins(通过持续集成软件工具jenkins分析)")])])]),a._v(" "),t("h4",{attrs:{id:"_3-2-2-通过jenkins扫描"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-通过jenkins扫描"}},[a._v("#")]),a._v(" 3.2.2 通过Jenkins扫描")]),a._v(" "),t("ol",[t("li",[a._v("Jenkins安装"),t("code",[a._v("SonarQube Scanner For Jenkins")]),a._v("插件（已安装）")]),a._v(" "),t("li",[a._v("Jenkins全局配置（系统管理->系统配置）中配置SonarQube服务器连接详细信息（已配置）")]),a._v(" "),t("li",[a._v("在Jenkins某个具体工程中加入sonarQube扫描分析的构建步骤\n"),t("ul",[t("li",[a._v("方案一：构建项目前进行sonarQube扫描")]),a._v(" "),t("li",[a._v("方案二：构建项目后进行sonarQube扫描")]),a._v(" "),t("li",[a._v("方案三：单独创建一个工程只用于sonarQube扫描（可参考Jenkins工程："),t("code",[a._v("sonarqube-lean-dev")]),a._v("、"),t("code",[a._v("sonarqube-lean-master")]),a._v("）")])])]),a._v(" "),t("li",[a._v("触发jenkins工程，sonar执行代码扫描，完成代码分析报告")])]),a._v(" "),t("p",[t("strong",[a._v("以方案三构建sonar扫描举例")])]),a._v(" "),t("p",[a._v("Jenkins工程的配置参考如下，详细可参考Jenkins工程："),t("code",[a._v("sonarqube-lean-dev")]),a._v("、"),t("code",[a._v("sonarqube-lean-master")])]),a._v(" "),t("ul",[t("li",[a._v("源码管理，选择Git，配置好仓库与分支")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E6%BA%90%E7%A0%81%E7%AE%A1%E7%90%86.png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("构建触发器，选择Gerrit event，并配置好Gerrit Trigger的触发机制")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E8%A7%A6%E5%8F%91%E5%99%A8.png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("构建，配置分析参数，主要配置两项："),t("code",[a._v("以哪种规则扫描分析这个项目")]),a._v("、"),t("code",[a._v("分析结果发布到sonar的哪个工程")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E6%9E%84%E5%BB%BA.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_3-3-质量配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-质量配置"}},[a._v("#")]),a._v(" 3.3 质量配置")]),a._v(" "),t("p",[a._v("扫描分析时需要匹配代码规则，指定不同的代码规则，扫描分析结果肯定也不一样")]),a._v(" "),t("h4",{attrs:{id:"_3-3-1-创建质量配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-创建质量配置"}},[a._v("#")]),a._v(" 3.3.1 创建质量配置")]),a._v(" "),t("ol",[t("li",[a._v("Quality Profiles，创建新质量配置")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%88%9B%E5%BB%BA%E8%B4%A8%E9%87%8F%E9%85%8D%E7%BD%AE.png",alt:""}})]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("填写表单，输入"),t("code",[a._v("Name")]),a._v("，选择适用的"),t("code",[a._v("Language")]),a._v("，Create创建")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%88%9B%E5%BB%BA%E8%B4%A8%E9%87%8F%E9%85%8D%E7%BD%AE2.png",alt:""}})]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("至此，一个新的质量配置就生成了。但是这个新生成的配置有两个问题：\n"),t("ul",[t("li",[a._v("新配置中的代码规则是空的，即：已生效规则是0，当前所有存在的规则都是未生效的")]),a._v(" "),t("li",[a._v("新配置没有作用到任何一个Java工程的扫描中")])])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%88%9B%E5%BB%BA%E8%B4%A8%E9%87%8F%E9%85%8D%E7%BD%AE3.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"_3-3-2-编辑质量配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-编辑质量配置"}},[a._v("#")]),a._v(" 3.3.2 编辑质量配置")]),a._v(" "),t("ul",[t("li",[a._v("向配置中添加/删除代码规则")])]),a._v(" "),t("ol",[t("li",[a._v("Rules，选择语言是Java，质量配置是上一步骤新创建的Test Rule")]),a._v(" "),t("li",[a._v("选择inactive，页面右侧显示所有未生效的规则，需要哪条规则生效，就将其设置成Activate")]),a._v(" "),t("li",[a._v("选择active，页面右侧显示所有已生效的规则，想要废弃哪条规则，就将其设置成Inactivate")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E6%B7%BB%E5%8A%A0%E8%A7%84%E5%88%99.png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("向配置中添加/删除适用的工程")])]),a._v(" "),t("ol",[t("li",[a._v("Quality Profiles，选择质量配置Test Rule，修改适用的工程")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E6%B7%BB%E5%8A%A0%E5%B7%A5%E7%A8%8B.png",alt:""}})]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("搜索工程（模糊匹配），勾选，即添加成功；去掉勾选，即删除成功")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E6%B7%BB%E5%8A%A0%E5%B7%A5%E7%A8%8B2.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_3-4-质量阀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-质量阀"}},[a._v("#")]),a._v(" 3.4 质量阀")]),a._v(" "),t("p",[a._v("它是一系列对项目指标进行度量的条件，扫描分析的项目结果必须达到所有条件才能算整体上通过了质量阈，其结果就显示为Pass，否则为Fail")]),a._v(" "),t("h4",{attrs:{id:"_3-4-1-创建质量阀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-创建质量阀"}},[a._v("#")]),a._v(" 3.4.1 创建质量阀")]),a._v(" "),t("ul",[t("li",[a._v("Quality Gates，创建一个空的质量阀")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%88%9B%E5%BB%BA%E8%B4%A8%E9%87%8F%E9%98%80.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"_3-4-2-编辑质量阀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-编辑质量阀"}},[a._v("#")]),a._v(" 3.4.2 编辑质量阀")]),a._v(" "),t("ol",[t("li",[a._v("Quality Gates，选择上一步骤创建的质量阀")]),a._v(" "),t("li",[a._v("编辑Conditions，即对项目的度量指标，可添加多个")]),a._v(" "),t("li",[a._v("编辑Project，添加/删除适用的工程")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E7%BC%96%E8%BE%91%E8%B4%A8%E9%87%8F%E9%98%80.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_3-5-项目权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-项目权限"}},[a._v("#")]),a._v(" 3.5 项目权限")]),a._v(" "),t("p",[a._v("用户对sonar项目的访问管理权限")]),a._v(" "),t("h4",{attrs:{id:"_3-5-1-用户管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-用户管理"}},[a._v("#")]),a._v(" 3.5.1 用户管理")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Administration --\x3e Security --\x3e Users，创建用户，以及进行用户管理（增删改，以及添加到组）")])]),a._v(" "),t("li",[t("p",[a._v("Administration --\x3e Security --\x3e Groups，创建组，以及进行组管理（增删改，以及添加用户）")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"_3-5-2-项目权限管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-项目权限管理"}},[a._v("#")]),a._v(" 3.5.2 项目权限管理")]),a._v(" "),t("ol",[t("li",[a._v("Administration --\x3e Projects --\x3e Management，会列出所有的现有项目")]),a._v(" "),t("li",[a._v("Action --\x3e Edit Permissions，针对具体某个项目修改权限")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E9%A1%B9%E7%9B%AE%E6%9D%83%E9%99%90.png",alt:""}})]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("选择Private，搜索用户/组（模糊匹配），给需要的用户/组勾选权限")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E9%A1%B9%E7%9B%AE%E6%9D%83%E9%99%902.png",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"_4-sonarqube之其他零碎介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-sonarqube之其他零碎介绍"}},[a._v("#")]),a._v(" 4. sonarQube之其他零碎介绍")]),a._v(" "),t("h3",{attrs:{id:"_4-1-项目-projects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-项目-projects"}},[a._v("#")]),a._v(" 4.1 项目(Projects)")]),a._v(" "),t("h4",{attrs:{id:"_4-1-1-预览页介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-预览页介绍"}},[a._v("#")]),a._v(" 4.1.1 预览页介绍")]),a._v(" "),t("ul",[t("li",[a._v("质量阀预览\n"),t("ul",[t("li",[a._v("安全性（Security Rating）：基于漏洞进行统计分析的结果")]),a._v(" "),t("li",[a._v("可靠性（Reliability Rating）：基于bug进行统计分析的结果")]),a._v(" "),t("li",[a._v("覆盖率（Coverage）：单元测试对代码的覆盖率")]),a._v(" "),t("li",[a._v("重复率（Duplicated Lines）：代码的重复率")])])]),a._v(" "),t("li",[a._v("所有问题预览&（相比于上一个版本的）新增问题预览\n"),t("ul",[t("li",[a._v("Bugs：整个工程所有&新增的bug数量")]),a._v(" "),t("li",[a._v("漏洞（Vulnerabilities）：整个工程所有&新增的漏洞数量")]),a._v(" "),t("li",[a._v("坏味道（Code Smell）：整个工程所有&新增的坏味道数量，以及技术债务所需的时间（675d，表示675天）")]),a._v(" "),t("li",[a._v("覆盖率（Coverage）：整个工程所有&新增的代码覆盖率")]),a._v(" "),t("li",[a._v("重复率（Duplications）：整个工程所有&新增的代码重复率")])])])]),a._v(" "),t("p",[t("strong",[a._v("以上所有项均可点击，查看详情")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E9%A2%84%E8%A7%88%E9%A1%B5.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-问题-issues"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-问题-issues"}},[a._v("#")]),a._v(" 4.2 问题(Issues)")]),a._v(" "),t("h4",{attrs:{id:"_4-2-1-问题筛选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-问题筛选"}},[a._v("#")]),a._v(" 4.2.1 问题筛选")]),a._v(" "),t("ul",[t("li",[a._v("可以在筛选区域选出符合条件的问题。比如：如何筛选出2020年Eric_Xue在test-project中所有的坏味道问题？那么只需要在筛选区域添加以下条件即可：Type=Code Smell，Create Date的开始时间=2020年1月1日，Project=test-project，Author=eric_xue@alibaba.com。")]),a._v(" "),t("li",[a._v("筛选列表最多显示15项，也没有搜索项，尤其是Author条件，很多情况下想找的Author根本没在显示列表中，没法筛选。这里提供一个"),t("strong",[a._v("小技巧")]),a._v("，可以直接在url上自己拼条件筛选，比如上面例子的URL就是http://ip:port/issues?authors=eric_xue%40alibaba.com&createdAfter=2020-01-01&projectUuids=AXGrSrSDZzm0h22Diam6&resolved=false&types=CODE_SMELL，回车后直接看到结果。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E9%97%AE%E9%A2%98%E7%AD%9B%E9%80%89.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"_4-2-2-问题修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-问题修改"}},[a._v("#")]),a._v(" 4.2.2 问题修改")]),a._v(" "),t("ul",[t("li",[a._v("点击某条问题，可进入到详情页可看到问题具体出现在哪一行代码上。")]),a._v(" "),t("li",[a._v("可配合问题详情提示进行修改，如下图所示")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E9%97%AE%E9%A2%98%E4%BF%AE%E6%94%B9.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_4-3-代码规则-rules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-代码规则-rules"}},[a._v("#")]),a._v(" 4.3 代码规则(Rules)")]),a._v(" "),t("h4",{attrs:{id:"_4-3-1-内置规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-内置规则"}},[a._v("#")]),a._v(" 4.3.1 内置规则")]),a._v(" "),t("ul",[t("li",[a._v("sonar内置规则的规则是固定的，比如：Java总共有528条规则，在编辑质量配置时，只有这么多规则可供操作。如果这些规则中没有合适的，需要额外新增规则，那就得自己写sonar规则插件进行添加。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%86%85%E7%BD%AE%E8%A7%84%E5%88%99.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_4-4-质量配置-quality-profiles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-质量配置-quality-profiles"}},[a._v("#")]),a._v(" 4.4 质量配置(Quality Profiles)")]),a._v(" "),t("h4",{attrs:{id:"_4-4-1-内置配置-默认配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-内置配置-默认配置"}},[a._v("#")]),a._v(" 4.4.1 内置配置&默认配置")]),a._v(" "),t("ul",[t("li",[a._v("sonar默认有多个语言（C#、Flex、Java等）的内置质量配置，标记着"),t("code",[a._v("Built-in")]),a._v("，这些质量配置的规则是无法编辑修改的。")]),a._v(" "),t("li",[a._v("一般我们把内置配置设置成默认配置。如果某个工程没有指定质量配置，那么sonar分析时会采用默认配置去分析。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%86%85%E7%BD%AE%E8%B4%A8%E9%87%8F%E9%85%8D%E7%BD%AE.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_4-5-质量阀-quality-gates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-质量阀-quality-gates"}},[a._v("#")]),a._v(" 4.5 质量阀(Quality Gates)")]),a._v(" "),t("p",[a._v("略...")]),a._v(" "),t("h3",{attrs:{id:"_4-6-配置-administration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-配置-administration"}},[a._v("#")]),a._v(" 4.6 配置(Administration)")]),a._v(" "),t("h4",{attrs:{id:"_4-6-1-插件市场"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-插件市场"}},[a._v("#")]),a._v(" 4.6.1 插件市场")]),a._v(" "),t("ul",[t("li",[a._v("sonar支持在线安装插件，在Marketplace搜索（模糊匹配）想要的插件，安装后sonar会自动重启生效。当然也有可能自动重启失败，这时需要到sonar所在服务器手动重启。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/views-img/2020082501/%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);